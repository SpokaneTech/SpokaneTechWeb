[project]
dependencies = [
    "django",
    "django-braces",
    "django-environ",
    "django-extensions",
    "django-filter",
    "django-handyhelpers",
    "requests>=2.26.0",
    "pillow",
]
description = "Inland Northwest Tech Community"
dynamic = ["version"]
keywords = ["django"]
license = {file = "LICENSE"}
name = "SpokaneTech"
readme = "README.md"
requires-python = ">=3.8"


[project.optional-dependencies]
dev = [
    "bandit",
    "black",
    "coveralls",
    "django-debug-toolbar",
    "faker",
    "isort",
    "model-bakery",
    "mypy",
    "mypy-extensions",
    "ruff",
    "pytest",
    "pytest-cov",
    "pytest-django",
    "radon",
    "safety",
    "types-python-dateutil",
    "typing_extensions",
]


[tool.bandit]
exclude_dirs = [
    "venv", 
    "src/django_project/tests", 
    "src/django_project/*/management/commands",
    "src/django_project/*/scripts/*"
    ]


[tool.black]
line-length = 120


[tool.coverage.report]
show_missing = true


[tool.coverage.run]
branch = true
source = ["django_project"]
omit = [
    "django_project/manage.py", 
    "django_project/core/asgi.py",
    "django_project/core/wsgi.py", 
    "django_project/*/scripts/*",
    "django_project/tests/*", 
    ]


[tool.isort]
profile = "black"


[tool.mypy]
exclude = [
    "venv/*", 
    "src/django_project/.*/migrations/.*",
    "src/django_project/.*/scripts/.*"
    ]
ignore_missing_imports = true


[tool.pytest.ini_options]
addopts = "-s -v -x --strict-markers -m 'not extra'"
testpaths = ["django_project"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]


[tool.ruff]
line-length = 120
exclude = ["django_project/manage.py", "django_project/tests", "django_project/*/migrations", "django_project/*/scripts", "django_project/*/local_test"]


[tool.setuptools.packages.find]
where = ["."]
include = ["django_project"]
exclude = []
namespaces = false
